ARM GAS  /var/folders/lw/g5htl3957y1bgqbynygtswj40000gn/T//cc3wafMF.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"tim.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.HAL_TIM_Base_MspInit,"ax",%progbits
  16              		.align	1
  17              		.global	HAL_TIM_Base_MspInit
  18              		.arch armv6s-m
  19              		.syntax unified
  20              		.code	16
  21              		.thumb_func
  22              		.fpu softvfp
  24              	HAL_TIM_Base_MspInit:
  25              	.LVL0:
  26              	.LFB41:
  27              		.file 1 "Core/Src/tim.c"
   1:Core/Src/tim.c **** /**
   2:Core/Src/tim.c ****   ******************************************************************************
   3:Core/Src/tim.c ****   * File Name          : TIM.c
   4:Core/Src/tim.c ****   * Description        : This file provides code for the configuration
   5:Core/Src/tim.c ****   *                      of the TIM instances.
   6:Core/Src/tim.c ****   ******************************************************************************
   7:Core/Src/tim.c ****   * @attention
   8:Core/Src/tim.c ****   *
   9:Core/Src/tim.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/tim.c ****   * All rights reserved.</center></h2>
  11:Core/Src/tim.c ****   *
  12:Core/Src/tim.c ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Core/Src/tim.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Core/Src/tim.c ****   * the License. You may obtain a copy of the License at:
  15:Core/Src/tim.c ****   *                             www.st.com/SLA0044
  16:Core/Src/tim.c ****   *
  17:Core/Src/tim.c ****   ******************************************************************************
  18:Core/Src/tim.c ****   */
  19:Core/Src/tim.c **** 
  20:Core/Src/tim.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/tim.c **** #include "tim.h"
  22:Core/Src/tim.c **** 
  23:Core/Src/tim.c **** /* USER CODE BEGIN 0 */
  24:Core/Src/tim.c **** 
  25:Core/Src/tim.c **** /* USER CODE END 0 */
  26:Core/Src/tim.c **** 
  27:Core/Src/tim.c **** TIM_HandleTypeDef htim16;
  28:Core/Src/tim.c **** 
  29:Core/Src/tim.c **** /* TIM16 init function */
  30:Core/Src/tim.c **** void MX_TIM16_Init(void)
  31:Core/Src/tim.c **** {
ARM GAS  /var/folders/lw/g5htl3957y1bgqbynygtswj40000gn/T//cc3wafMF.s 			page 2


  32:Core/Src/tim.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
  33:Core/Src/tim.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
  34:Core/Src/tim.c **** 
  35:Core/Src/tim.c ****   htim16.Instance = TIM16;
  36:Core/Src/tim.c ****   htim16.Init.Prescaler = 0;
  37:Core/Src/tim.c ****   htim16.Init.CounterMode = TIM_COUNTERMODE_UP;
  38:Core/Src/tim.c ****   htim16.Init.Period = 65535;
  39:Core/Src/tim.c ****   htim16.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
  40:Core/Src/tim.c ****   htim16.Init.RepetitionCounter = 0;
  41:Core/Src/tim.c ****   htim16.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
  42:Core/Src/tim.c ****   if (HAL_TIM_Base_Init(&htim16) != HAL_OK)
  43:Core/Src/tim.c ****   {
  44:Core/Src/tim.c ****     Error_Handler();
  45:Core/Src/tim.c ****   }
  46:Core/Src/tim.c ****   if (HAL_TIM_PWM_Init(&htim16) != HAL_OK)
  47:Core/Src/tim.c ****   {
  48:Core/Src/tim.c ****     Error_Handler();
  49:Core/Src/tim.c ****   }
  50:Core/Src/tim.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
  51:Core/Src/tim.c ****   sConfigOC.Pulse = 0;
  52:Core/Src/tim.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
  53:Core/Src/tim.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
  54:Core/Src/tim.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
  55:Core/Src/tim.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
  56:Core/Src/tim.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
  57:Core/Src/tim.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim16, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
  58:Core/Src/tim.c ****   {
  59:Core/Src/tim.c ****     Error_Handler();
  60:Core/Src/tim.c ****   }
  61:Core/Src/tim.c ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
  62:Core/Src/tim.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
  63:Core/Src/tim.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
  64:Core/Src/tim.c ****   sBreakDeadTimeConfig.DeadTime = 0;
  65:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
  66:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
  67:Core/Src/tim.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
  68:Core/Src/tim.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim16, &sBreakDeadTimeConfig) != HAL_OK)
  69:Core/Src/tim.c ****   {
  70:Core/Src/tim.c ****     Error_Handler();
  71:Core/Src/tim.c ****   }
  72:Core/Src/tim.c ****   HAL_TIM_MspPostInit(&htim16);
  73:Core/Src/tim.c **** 
  74:Core/Src/tim.c **** }
  75:Core/Src/tim.c **** 
  76:Core/Src/tim.c **** void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
  77:Core/Src/tim.c **** {
  28              		.loc 1 77 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		.loc 1 77 1 is_stmt 0 view .LVU1
  33 0000 00B5     		push	{lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 14, -4
  37 0002 83B0     		sub	sp, sp, #12
  38              	.LCFI1:
ARM GAS  /var/folders/lw/g5htl3957y1bgqbynygtswj40000gn/T//cc3wafMF.s 			page 3


  39              		.cfi_def_cfa_offset 16
  78:Core/Src/tim.c **** 
  79:Core/Src/tim.c ****   if(tim_baseHandle->Instance==TIM16)
  40              		.loc 1 79 3 is_stmt 1 view .LVU2
  41              		.loc 1 79 20 is_stmt 0 view .LVU3
  42 0004 0268     		ldr	r2, [r0]
  43              		.loc 1 79 5 view .LVU4
  44 0006 0C4B     		ldr	r3, .L4
  45 0008 9A42     		cmp	r2, r3
  46 000a 01D0     		beq	.L3
  47              	.LVL1:
  48              	.L1:
  80:Core/Src/tim.c ****   {
  81:Core/Src/tim.c ****   /* USER CODE BEGIN TIM16_MspInit 0 */
  82:Core/Src/tim.c **** 
  83:Core/Src/tim.c ****   /* USER CODE END TIM16_MspInit 0 */
  84:Core/Src/tim.c ****     /* TIM16 clock enable */
  85:Core/Src/tim.c ****     __HAL_RCC_TIM16_CLK_ENABLE();
  86:Core/Src/tim.c **** 
  87:Core/Src/tim.c ****     /* TIM16 interrupt Init */
  88:Core/Src/tim.c ****     HAL_NVIC_SetPriority(TIM16_IRQn, 0, 0);
  89:Core/Src/tim.c ****     HAL_NVIC_EnableIRQ(TIM16_IRQn);
  90:Core/Src/tim.c ****   /* USER CODE BEGIN TIM16_MspInit 1 */
  91:Core/Src/tim.c **** 
  92:Core/Src/tim.c ****   /* USER CODE END TIM16_MspInit 1 */
  93:Core/Src/tim.c ****   }
  94:Core/Src/tim.c **** }
  49              		.loc 1 94 1 view .LVU5
  50 000c 03B0     		add	sp, sp, #12
  51              		@ sp needed
  52 000e 00BD     		pop	{pc}
  53              	.LVL2:
  54              	.L3:
  85:Core/Src/tim.c **** 
  55              		.loc 1 85 5 is_stmt 1 view .LVU6
  56              	.LBB2:
  85:Core/Src/tim.c **** 
  57              		.loc 1 85 5 view .LVU7
  85:Core/Src/tim.c **** 
  58              		.loc 1 85 5 view .LVU8
  59 0010 0A4A     		ldr	r2, .L4+4
  60 0012 9169     		ldr	r1, [r2, #24]
  61 0014 8020     		movs	r0, #128
  62              	.LVL3:
  85:Core/Src/tim.c **** 
  63              		.loc 1 85 5 is_stmt 0 view .LVU9
  64 0016 8002     		lsls	r0, r0, #10
  65 0018 0143     		orrs	r1, r0
  66 001a 9161     		str	r1, [r2, #24]
  85:Core/Src/tim.c **** 
  67              		.loc 1 85 5 is_stmt 1 view .LVU10
  68 001c 9369     		ldr	r3, [r2, #24]
  69 001e 0340     		ands	r3, r0
  70 0020 0193     		str	r3, [sp, #4]
  85:Core/Src/tim.c **** 
  71              		.loc 1 85 5 view .LVU11
  72 0022 019B     		ldr	r3, [sp, #4]
ARM GAS  /var/folders/lw/g5htl3957y1bgqbynygtswj40000gn/T//cc3wafMF.s 			page 4


  73              	.LBE2:
  85:Core/Src/tim.c **** 
  74              		.loc 1 85 5 view .LVU12
  88:Core/Src/tim.c ****     HAL_NVIC_EnableIRQ(TIM16_IRQn);
  75              		.loc 1 88 5 view .LVU13
  76 0024 0022     		movs	r2, #0
  77 0026 0021     		movs	r1, #0
  78 0028 1520     		movs	r0, #21
  79 002a FFF7FEFF 		bl	HAL_NVIC_SetPriority
  80              	.LVL4:
  89:Core/Src/tim.c ****   /* USER CODE BEGIN TIM16_MspInit 1 */
  81              		.loc 1 89 5 view .LVU14
  82 002e 1520     		movs	r0, #21
  83 0030 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
  84              	.LVL5:
  85              		.loc 1 94 1 is_stmt 0 view .LVU15
  86 0034 EAE7     		b	.L1
  87              	.L5:
  88 0036 C046     		.align	2
  89              	.L4:
  90 0038 00440140 		.word	1073824768
  91 003c 00100240 		.word	1073876992
  92              		.cfi_endproc
  93              	.LFE41:
  95              		.section	.text.HAL_TIM_MspPostInit,"ax",%progbits
  96              		.align	1
  97              		.global	HAL_TIM_MspPostInit
  98              		.syntax unified
  99              		.code	16
 100              		.thumb_func
 101              		.fpu softvfp
 103              	HAL_TIM_MspPostInit:
 104              	.LVL6:
 105              	.LFB42:
  95:Core/Src/tim.c **** void HAL_TIM_MspPostInit(TIM_HandleTypeDef* timHandle)
  96:Core/Src/tim.c **** {
 106              		.loc 1 96 1 is_stmt 1 view -0
 107              		.cfi_startproc
 108              		@ args = 0, pretend = 0, frame = 24
 109              		@ frame_needed = 0, uses_anonymous_args = 0
 110              		.loc 1 96 1 is_stmt 0 view .LVU17
 111 0000 10B5     		push	{r4, lr}
 112              	.LCFI2:
 113              		.cfi_def_cfa_offset 8
 114              		.cfi_offset 4, -8
 115              		.cfi_offset 14, -4
 116 0002 86B0     		sub	sp, sp, #24
 117              	.LCFI3:
 118              		.cfi_def_cfa_offset 32
 119 0004 0400     		movs	r4, r0
  97:Core/Src/tim.c **** 
  98:Core/Src/tim.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 120              		.loc 1 98 3 is_stmt 1 view .LVU18
 121              		.loc 1 98 20 is_stmt 0 view .LVU19
 122 0006 1422     		movs	r2, #20
 123 0008 0021     		movs	r1, #0
 124 000a 01A8     		add	r0, sp, #4
ARM GAS  /var/folders/lw/g5htl3957y1bgqbynygtswj40000gn/T//cc3wafMF.s 			page 5


 125              	.LVL7:
 126              		.loc 1 98 20 view .LVU20
 127 000c FFF7FEFF 		bl	memset
 128              	.LVL8:
  99:Core/Src/tim.c ****   if(timHandle->Instance==TIM16)
 129              		.loc 1 99 3 is_stmt 1 view .LVU21
 130              		.loc 1 99 15 is_stmt 0 view .LVU22
 131 0010 2268     		ldr	r2, [r4]
 132              		.loc 1 99 5 view .LVU23
 133 0012 0F4B     		ldr	r3, .L9
 134 0014 9A42     		cmp	r2, r3
 135 0016 01D0     		beq	.L8
 136              	.L6:
 100:Core/Src/tim.c ****   {
 101:Core/Src/tim.c ****   /* USER CODE BEGIN TIM16_MspPostInit 0 */
 102:Core/Src/tim.c **** 
 103:Core/Src/tim.c ****   /* USER CODE END TIM16_MspPostInit 0 */
 104:Core/Src/tim.c **** 
 105:Core/Src/tim.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 106:Core/Src/tim.c ****     /**TIM16 GPIO Configuration
 107:Core/Src/tim.c ****     PA6     ------> TIM16_CH1
 108:Core/Src/tim.c ****     */
 109:Core/Src/tim.c ****     GPIO_InitStruct.Pin = CLK_Pin;
 110:Core/Src/tim.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 111:Core/Src/tim.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 112:Core/Src/tim.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 113:Core/Src/tim.c ****     GPIO_InitStruct.Alternate = GPIO_AF5_TIM16;
 114:Core/Src/tim.c ****     HAL_GPIO_Init(CLK_GPIO_Port, &GPIO_InitStruct);
 115:Core/Src/tim.c **** 
 116:Core/Src/tim.c ****   /* USER CODE BEGIN TIM16_MspPostInit 1 */
 117:Core/Src/tim.c **** 
 118:Core/Src/tim.c ****   /* USER CODE END TIM16_MspPostInit 1 */
 119:Core/Src/tim.c ****   }
 120:Core/Src/tim.c **** 
 121:Core/Src/tim.c **** }
 137              		.loc 1 121 1 view .LVU24
 138 0018 06B0     		add	sp, sp, #24
 139              		@ sp needed
 140              	.LVL9:
 141              		.loc 1 121 1 view .LVU25
 142 001a 10BD     		pop	{r4, pc}
 143              	.LVL10:
 144              	.L8:
 105:Core/Src/tim.c ****     /**TIM16 GPIO Configuration
 145              		.loc 1 105 5 is_stmt 1 view .LVU26
 146              	.LBB3:
 105:Core/Src/tim.c ****     /**TIM16 GPIO Configuration
 147              		.loc 1 105 5 view .LVU27
 105:Core/Src/tim.c ****     /**TIM16 GPIO Configuration
 148              		.loc 1 105 5 view .LVU28
 149 001c 0D4A     		ldr	r2, .L9+4
 150 001e 5169     		ldr	r1, [r2, #20]
 151 0020 8020     		movs	r0, #128
 152 0022 8002     		lsls	r0, r0, #10
 153 0024 0143     		orrs	r1, r0
 154 0026 5161     		str	r1, [r2, #20]
 105:Core/Src/tim.c ****     /**TIM16 GPIO Configuration
ARM GAS  /var/folders/lw/g5htl3957y1bgqbynygtswj40000gn/T//cc3wafMF.s 			page 6


 155              		.loc 1 105 5 view .LVU29
 156 0028 5369     		ldr	r3, [r2, #20]
 157 002a 0340     		ands	r3, r0
 158 002c 0093     		str	r3, [sp]
 105:Core/Src/tim.c ****     /**TIM16 GPIO Configuration
 159              		.loc 1 105 5 view .LVU30
 160 002e 009B     		ldr	r3, [sp]
 161              	.LBE3:
 105:Core/Src/tim.c ****     /**TIM16 GPIO Configuration
 162              		.loc 1 105 5 view .LVU31
 109:Core/Src/tim.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 163              		.loc 1 109 5 view .LVU32
 109:Core/Src/tim.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 164              		.loc 1 109 25 is_stmt 0 view .LVU33
 165 0030 4023     		movs	r3, #64
 166 0032 0193     		str	r3, [sp, #4]
 110:Core/Src/tim.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 167              		.loc 1 110 5 is_stmt 1 view .LVU34
 110:Core/Src/tim.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 168              		.loc 1 110 26 is_stmt 0 view .LVU35
 169 0034 3E3B     		subs	r3, r3, #62
 170 0036 0293     		str	r3, [sp, #8]
 111:Core/Src/tim.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 171              		.loc 1 111 5 is_stmt 1 view .LVU36
 111:Core/Src/tim.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 172              		.loc 1 111 26 is_stmt 0 view .LVU37
 173 0038 0023     		movs	r3, #0
 174 003a 0393     		str	r3, [sp, #12]
 112:Core/Src/tim.c ****     GPIO_InitStruct.Alternate = GPIO_AF5_TIM16;
 175              		.loc 1 112 5 is_stmt 1 view .LVU38
 112:Core/Src/tim.c ****     GPIO_InitStruct.Alternate = GPIO_AF5_TIM16;
 176              		.loc 1 112 27 is_stmt 0 view .LVU39
 177 003c 0493     		str	r3, [sp, #16]
 113:Core/Src/tim.c ****     HAL_GPIO_Init(CLK_GPIO_Port, &GPIO_InitStruct);
 178              		.loc 1 113 5 is_stmt 1 view .LVU40
 113:Core/Src/tim.c ****     HAL_GPIO_Init(CLK_GPIO_Port, &GPIO_InitStruct);
 179              		.loc 1 113 31 is_stmt 0 view .LVU41
 180 003e 0533     		adds	r3, r3, #5
 181 0040 0593     		str	r3, [sp, #20]
 114:Core/Src/tim.c **** 
 182              		.loc 1 114 5 is_stmt 1 view .LVU42
 183 0042 9020     		movs	r0, #144
 184 0044 01A9     		add	r1, sp, #4
 185 0046 C005     		lsls	r0, r0, #23
 186 0048 FFF7FEFF 		bl	HAL_GPIO_Init
 187              	.LVL11:
 188              		.loc 1 121 1 is_stmt 0 view .LVU43
 189 004c E4E7     		b	.L6
 190              	.L10:
 191 004e C046     		.align	2
 192              	.L9:
 193 0050 00440140 		.word	1073824768
 194 0054 00100240 		.word	1073876992
 195              		.cfi_endproc
 196              	.LFE42:
 198              		.section	.text.MX_TIM16_Init,"ax",%progbits
 199              		.align	1
ARM GAS  /var/folders/lw/g5htl3957y1bgqbynygtswj40000gn/T//cc3wafMF.s 			page 7


 200              		.global	MX_TIM16_Init
 201              		.syntax unified
 202              		.code	16
 203              		.thumb_func
 204              		.fpu softvfp
 206              	MX_TIM16_Init:
 207              	.LFB40:
  31:Core/Src/tim.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 208              		.loc 1 31 1 is_stmt 1 view -0
 209              		.cfi_startproc
 210              		@ args = 0, pretend = 0, frame = 64
 211              		@ frame_needed = 0, uses_anonymous_args = 0
 212 0000 00B5     		push	{lr}
 213              	.LCFI4:
 214              		.cfi_def_cfa_offset 4
 215              		.cfi_offset 14, -4
 216 0002 91B0     		sub	sp, sp, #68
 217              	.LCFI5:
 218              		.cfi_def_cfa_offset 72
  32:Core/Src/tim.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 219              		.loc 1 32 3 view .LVU45
  32:Core/Src/tim.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 220              		.loc 1 32 22 is_stmt 0 view .LVU46
 221 0004 1C22     		movs	r2, #28
 222 0006 0021     		movs	r1, #0
 223 0008 09A8     		add	r0, sp, #36
 224 000a FFF7FEFF 		bl	memset
 225              	.LVL12:
  33:Core/Src/tim.c **** 
 226              		.loc 1 33 3 is_stmt 1 view .LVU47
  33:Core/Src/tim.c **** 
 227              		.loc 1 33 34 is_stmt 0 view .LVU48
 228 000e 2022     		movs	r2, #32
 229 0010 0021     		movs	r1, #0
 230 0012 01A8     		add	r0, sp, #4
 231 0014 FFF7FEFF 		bl	memset
 232              	.LVL13:
  35:Core/Src/tim.c ****   htim16.Init.Prescaler = 0;
 233              		.loc 1 35 3 is_stmt 1 view .LVU49
  35:Core/Src/tim.c ****   htim16.Init.Prescaler = 0;
 234              		.loc 1 35 19 is_stmt 0 view .LVU50
 235 0018 2248     		ldr	r0, .L20
 236 001a 234B     		ldr	r3, .L20+4
 237 001c 0360     		str	r3, [r0]
  36:Core/Src/tim.c ****   htim16.Init.CounterMode = TIM_COUNTERMODE_UP;
 238              		.loc 1 36 3 is_stmt 1 view .LVU51
  36:Core/Src/tim.c ****   htim16.Init.CounterMode = TIM_COUNTERMODE_UP;
 239              		.loc 1 36 25 is_stmt 0 view .LVU52
 240 001e 0023     		movs	r3, #0
 241 0020 4360     		str	r3, [r0, #4]
  37:Core/Src/tim.c ****   htim16.Init.Period = 65535;
 242              		.loc 1 37 3 is_stmt 1 view .LVU53
  37:Core/Src/tim.c ****   htim16.Init.Period = 65535;
 243              		.loc 1 37 27 is_stmt 0 view .LVU54
 244 0022 8360     		str	r3, [r0, #8]
  38:Core/Src/tim.c ****   htim16.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 245              		.loc 1 38 3 is_stmt 1 view .LVU55
ARM GAS  /var/folders/lw/g5htl3957y1bgqbynygtswj40000gn/T//cc3wafMF.s 			page 8


  38:Core/Src/tim.c ****   htim16.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 246              		.loc 1 38 22 is_stmt 0 view .LVU56
 247 0024 214A     		ldr	r2, .L20+8
 248 0026 C260     		str	r2, [r0, #12]
  39:Core/Src/tim.c ****   htim16.Init.RepetitionCounter = 0;
 249              		.loc 1 39 3 is_stmt 1 view .LVU57
  39:Core/Src/tim.c ****   htim16.Init.RepetitionCounter = 0;
 250              		.loc 1 39 29 is_stmt 0 view .LVU58
 251 0028 0361     		str	r3, [r0, #16]
  40:Core/Src/tim.c ****   htim16.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 252              		.loc 1 40 3 is_stmt 1 view .LVU59
  40:Core/Src/tim.c ****   htim16.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 253              		.loc 1 40 33 is_stmt 0 view .LVU60
 254 002a 4361     		str	r3, [r0, #20]
  41:Core/Src/tim.c ****   if (HAL_TIM_Base_Init(&htim16) != HAL_OK)
 255              		.loc 1 41 3 is_stmt 1 view .LVU61
  41:Core/Src/tim.c ****   if (HAL_TIM_Base_Init(&htim16) != HAL_OK)
 256              		.loc 1 41 33 is_stmt 0 view .LVU62
 257 002c 8361     		str	r3, [r0, #24]
  42:Core/Src/tim.c ****   {
 258              		.loc 1 42 3 is_stmt 1 view .LVU63
  42:Core/Src/tim.c ****   {
 259              		.loc 1 42 7 is_stmt 0 view .LVU64
 260 002e FFF7FEFF 		bl	HAL_TIM_Base_Init
 261              	.LVL14:
  42:Core/Src/tim.c ****   {
 262              		.loc 1 42 6 view .LVU65
 263 0032 0028     		cmp	r0, #0
 264 0034 29D1     		bne	.L16
 265              	.L12:
  46:Core/Src/tim.c ****   {
 266              		.loc 1 46 3 is_stmt 1 view .LVU66
  46:Core/Src/tim.c ****   {
 267              		.loc 1 46 7 is_stmt 0 view .LVU67
 268 0036 1B48     		ldr	r0, .L20
 269 0038 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 270              	.LVL15:
  46:Core/Src/tim.c ****   {
 271              		.loc 1 46 6 view .LVU68
 272 003c 0028     		cmp	r0, #0
 273 003e 27D1     		bne	.L17
 274              	.L13:
  50:Core/Src/tim.c ****   sConfigOC.Pulse = 0;
 275              		.loc 1 50 3 is_stmt 1 view .LVU69
  50:Core/Src/tim.c ****   sConfigOC.Pulse = 0;
 276              		.loc 1 50 20 is_stmt 0 view .LVU70
 277 0040 6023     		movs	r3, #96
 278 0042 0993     		str	r3, [sp, #36]
  51:Core/Src/tim.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 279              		.loc 1 51 3 is_stmt 1 view .LVU71
  51:Core/Src/tim.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 280              		.loc 1 51 19 is_stmt 0 view .LVU72
 281 0044 0023     		movs	r3, #0
 282 0046 0A93     		str	r3, [sp, #40]
  52:Core/Src/tim.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 283              		.loc 1 52 3 is_stmt 1 view .LVU73
  52:Core/Src/tim.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
ARM GAS  /var/folders/lw/g5htl3957y1bgqbynygtswj40000gn/T//cc3wafMF.s 			page 9


 284              		.loc 1 52 24 is_stmt 0 view .LVU74
 285 0048 0B93     		str	r3, [sp, #44]
  53:Core/Src/tim.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 286              		.loc 1 53 3 is_stmt 1 view .LVU75
  53:Core/Src/tim.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 287              		.loc 1 53 25 is_stmt 0 view .LVU76
 288 004a 0C93     		str	r3, [sp, #48]
  54:Core/Src/tim.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 289              		.loc 1 54 3 is_stmt 1 view .LVU77
  54:Core/Src/tim.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 290              		.loc 1 54 24 is_stmt 0 view .LVU78
 291 004c 0D93     		str	r3, [sp, #52]
  55:Core/Src/tim.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 292              		.loc 1 55 3 is_stmt 1 view .LVU79
  55:Core/Src/tim.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 293              		.loc 1 55 25 is_stmt 0 view .LVU80
 294 004e 0E93     		str	r3, [sp, #56]
  56:Core/Src/tim.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim16, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 295              		.loc 1 56 3 is_stmt 1 view .LVU81
  56:Core/Src/tim.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim16, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 296              		.loc 1 56 26 is_stmt 0 view .LVU82
 297 0050 0F93     		str	r3, [sp, #60]
  57:Core/Src/tim.c ****   {
 298              		.loc 1 57 3 is_stmt 1 view .LVU83
  57:Core/Src/tim.c ****   {
 299              		.loc 1 57 7 is_stmt 0 view .LVU84
 300 0052 0022     		movs	r2, #0
 301 0054 09A9     		add	r1, sp, #36
 302 0056 1348     		ldr	r0, .L20
 303 0058 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 304              	.LVL16:
  57:Core/Src/tim.c ****   {
 305              		.loc 1 57 6 view .LVU85
 306 005c 0028     		cmp	r0, #0
 307 005e 1AD1     		bne	.L18
 308              	.L14:
  61:Core/Src/tim.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 309              		.loc 1 61 3 is_stmt 1 view .LVU86
  61:Core/Src/tim.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 310              		.loc 1 61 40 is_stmt 0 view .LVU87
 311 0060 0023     		movs	r3, #0
 312 0062 0193     		str	r3, [sp, #4]
  62:Core/Src/tim.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 313              		.loc 1 62 3 is_stmt 1 view .LVU88
  62:Core/Src/tim.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 314              		.loc 1 62 41 is_stmt 0 view .LVU89
 315 0064 0293     		str	r3, [sp, #8]
  63:Core/Src/tim.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 316              		.loc 1 63 3 is_stmt 1 view .LVU90
  63:Core/Src/tim.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 317              		.loc 1 63 34 is_stmt 0 view .LVU91
 318 0066 0393     		str	r3, [sp, #12]
  64:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 319              		.loc 1 64 3 is_stmt 1 view .LVU92
  64:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 320              		.loc 1 64 33 is_stmt 0 view .LVU93
 321 0068 0493     		str	r3, [sp, #16]
ARM GAS  /var/folders/lw/g5htl3957y1bgqbynygtswj40000gn/T//cc3wafMF.s 			page 10


  65:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 322              		.loc 1 65 3 is_stmt 1 view .LVU94
  65:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 323              		.loc 1 65 35 is_stmt 0 view .LVU95
 324 006a 0593     		str	r3, [sp, #20]
  66:Core/Src/tim.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 325              		.loc 1 66 3 is_stmt 1 view .LVU96
  66:Core/Src/tim.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 326              		.loc 1 66 38 is_stmt 0 view .LVU97
 327 006c 8022     		movs	r2, #128
 328 006e 9201     		lsls	r2, r2, #6
 329 0070 0692     		str	r2, [sp, #24]
  67:Core/Src/tim.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim16, &sBreakDeadTimeConfig) != HAL_OK)
 330              		.loc 1 67 3 is_stmt 1 view .LVU98
  67:Core/Src/tim.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim16, &sBreakDeadTimeConfig) != HAL_OK)
 331              		.loc 1 67 40 is_stmt 0 view .LVU99
 332 0072 0893     		str	r3, [sp, #32]
  68:Core/Src/tim.c ****   {
 333              		.loc 1 68 3 is_stmt 1 view .LVU100
  68:Core/Src/tim.c ****   {
 334              		.loc 1 68 7 is_stmt 0 view .LVU101
 335 0074 01A9     		add	r1, sp, #4
 336 0076 0B48     		ldr	r0, .L20
 337 0078 FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 338              	.LVL17:
  68:Core/Src/tim.c ****   {
 339              		.loc 1 68 6 view .LVU102
 340 007c 0028     		cmp	r0, #0
 341 007e 0DD1     		bne	.L19
 342              	.L15:
  72:Core/Src/tim.c **** 
 343              		.loc 1 72 3 is_stmt 1 view .LVU103
 344 0080 0848     		ldr	r0, .L20
 345 0082 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 346              	.LVL18:
  74:Core/Src/tim.c **** 
 347              		.loc 1 74 1 is_stmt 0 view .LVU104
 348 0086 11B0     		add	sp, sp, #68
 349              		@ sp needed
 350 0088 00BD     		pop	{pc}
 351              	.L16:
  44:Core/Src/tim.c ****   }
 352              		.loc 1 44 5 is_stmt 1 view .LVU105
 353 008a FFF7FEFF 		bl	Error_Handler
 354              	.LVL19:
 355 008e D2E7     		b	.L12
 356              	.L17:
  48:Core/Src/tim.c ****   }
 357              		.loc 1 48 5 view .LVU106
 358 0090 FFF7FEFF 		bl	Error_Handler
 359              	.LVL20:
 360 0094 D4E7     		b	.L13
 361              	.L18:
  59:Core/Src/tim.c ****   }
 362              		.loc 1 59 5 view .LVU107
 363 0096 FFF7FEFF 		bl	Error_Handler
 364              	.LVL21:
ARM GAS  /var/folders/lw/g5htl3957y1bgqbynygtswj40000gn/T//cc3wafMF.s 			page 11


 365 009a E1E7     		b	.L14
 366              	.L19:
  70:Core/Src/tim.c ****   }
 367              		.loc 1 70 5 view .LVU108
 368 009c FFF7FEFF 		bl	Error_Handler
 369              	.LVL22:
 370 00a0 EEE7     		b	.L15
 371              	.L21:
 372 00a2 C046     		.align	2
 373              	.L20:
 374 00a4 00000000 		.word	htim16
 375 00a8 00440140 		.word	1073824768
 376 00ac FFFF0000 		.word	65535
 377              		.cfi_endproc
 378              	.LFE40:
 380              		.section	.text.HAL_TIM_Base_MspDeInit,"ax",%progbits
 381              		.align	1
 382              		.global	HAL_TIM_Base_MspDeInit
 383              		.syntax unified
 384              		.code	16
 385              		.thumb_func
 386              		.fpu softvfp
 388              	HAL_TIM_Base_MspDeInit:
 389              	.LVL23:
 390              	.LFB43:
 122:Core/Src/tim.c **** 
 123:Core/Src/tim.c **** void HAL_TIM_Base_MspDeInit(TIM_HandleTypeDef* tim_baseHandle)
 124:Core/Src/tim.c **** {
 391              		.loc 1 124 1 view -0
 392              		.cfi_startproc
 393              		@ args = 0, pretend = 0, frame = 0
 394              		@ frame_needed = 0, uses_anonymous_args = 0
 395              		.loc 1 124 1 is_stmt 0 view .LVU110
 396 0000 10B5     		push	{r4, lr}
 397              	.LCFI6:
 398              		.cfi_def_cfa_offset 8
 399              		.cfi_offset 4, -8
 400              		.cfi_offset 14, -4
 125:Core/Src/tim.c **** 
 126:Core/Src/tim.c ****   if(tim_baseHandle->Instance==TIM16)
 401              		.loc 1 126 3 is_stmt 1 view .LVU111
 402              		.loc 1 126 20 is_stmt 0 view .LVU112
 403 0002 0268     		ldr	r2, [r0]
 404              		.loc 1 126 5 view .LVU113
 405 0004 064B     		ldr	r3, .L25
 406 0006 9A42     		cmp	r2, r3
 407 0008 00D0     		beq	.L24
 408              	.LVL24:
 409              	.L22:
 127:Core/Src/tim.c ****   {
 128:Core/Src/tim.c ****   /* USER CODE BEGIN TIM16_MspDeInit 0 */
 129:Core/Src/tim.c **** 
 130:Core/Src/tim.c ****   /* USER CODE END TIM16_MspDeInit 0 */
 131:Core/Src/tim.c ****     /* Peripheral clock disable */
 132:Core/Src/tim.c ****     __HAL_RCC_TIM16_CLK_DISABLE();
 133:Core/Src/tim.c **** 
 134:Core/Src/tim.c ****     /* TIM16 interrupt Deinit */
ARM GAS  /var/folders/lw/g5htl3957y1bgqbynygtswj40000gn/T//cc3wafMF.s 			page 12


 135:Core/Src/tim.c ****     HAL_NVIC_DisableIRQ(TIM16_IRQn);
 136:Core/Src/tim.c ****   /* USER CODE BEGIN TIM16_MspDeInit 1 */
 137:Core/Src/tim.c **** 
 138:Core/Src/tim.c ****   /* USER CODE END TIM16_MspDeInit 1 */
 139:Core/Src/tim.c ****   }
 140:Core/Src/tim.c **** }
 410              		.loc 1 140 1 view .LVU114
 411              		@ sp needed
 412 000a 10BD     		pop	{r4, pc}
 413              	.LVL25:
 414              	.L24:
 132:Core/Src/tim.c **** 
 415              		.loc 1 132 5 is_stmt 1 view .LVU115
 416 000c 054A     		ldr	r2, .L25+4
 417 000e 9369     		ldr	r3, [r2, #24]
 418 0010 0549     		ldr	r1, .L25+8
 419 0012 0B40     		ands	r3, r1
 420 0014 9361     		str	r3, [r2, #24]
 135:Core/Src/tim.c ****   /* USER CODE BEGIN TIM16_MspDeInit 1 */
 421              		.loc 1 135 5 view .LVU116
 422 0016 1520     		movs	r0, #21
 423              	.LVL26:
 135:Core/Src/tim.c ****   /* USER CODE BEGIN TIM16_MspDeInit 1 */
 424              		.loc 1 135 5 is_stmt 0 view .LVU117
 425 0018 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 426              	.LVL27:
 427              		.loc 1 140 1 view .LVU118
 428 001c F5E7     		b	.L22
 429              	.L26:
 430 001e C046     		.align	2
 431              	.L25:
 432 0020 00440140 		.word	1073824768
 433 0024 00100240 		.word	1073876992
 434 0028 FFFFFDFF 		.word	-131073
 435              		.cfi_endproc
 436              	.LFE43:
 438              		.comm	htim16,72,4
 439              		.text
 440              	.Letext0:
 441              		.file 2 "/Users/sens/dev/toolchains/arm-gcc/arm-none-eabi/include/machine/_default_types.h"
 442              		.file 3 "/Users/sens/dev/toolchains/arm-gcc/arm-none-eabi/include/sys/_stdint.h"
 443              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 444              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f072xb.h"
 445              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 446              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 447              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 448              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_tim.h"
 449              		.file 10 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 450              		.file 11 "Core/Inc/tim.h"
 451              		.file 12 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_cortex.h"
 452              		.file 13 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_tim_ex.h"
 453              		.file 14 "Core/Inc/main.h"
 454              		.file 15 "<built-in>"
ARM GAS  /var/folders/lw/g5htl3957y1bgqbynygtswj40000gn/T//cc3wafMF.s 			page 13


DEFINED SYMBOLS
                            *ABS*:0000000000000000 tim.c
/var/folders/lw/g5htl3957y1bgqbynygtswj40000gn/T//cc3wafMF.s:16     .text.HAL_TIM_Base_MspInit:0000000000000000 $t
/var/folders/lw/g5htl3957y1bgqbynygtswj40000gn/T//cc3wafMF.s:24     .text.HAL_TIM_Base_MspInit:0000000000000000 HAL_TIM_Base_MspInit
/var/folders/lw/g5htl3957y1bgqbynygtswj40000gn/T//cc3wafMF.s:90     .text.HAL_TIM_Base_MspInit:0000000000000038 $d
/var/folders/lw/g5htl3957y1bgqbynygtswj40000gn/T//cc3wafMF.s:96     .text.HAL_TIM_MspPostInit:0000000000000000 $t
/var/folders/lw/g5htl3957y1bgqbynygtswj40000gn/T//cc3wafMF.s:103    .text.HAL_TIM_MspPostInit:0000000000000000 HAL_TIM_MspPostInit
/var/folders/lw/g5htl3957y1bgqbynygtswj40000gn/T//cc3wafMF.s:193    .text.HAL_TIM_MspPostInit:0000000000000050 $d
/var/folders/lw/g5htl3957y1bgqbynygtswj40000gn/T//cc3wafMF.s:199    .text.MX_TIM16_Init:0000000000000000 $t
/var/folders/lw/g5htl3957y1bgqbynygtswj40000gn/T//cc3wafMF.s:206    .text.MX_TIM16_Init:0000000000000000 MX_TIM16_Init
/var/folders/lw/g5htl3957y1bgqbynygtswj40000gn/T//cc3wafMF.s:374    .text.MX_TIM16_Init:00000000000000a4 $d
                            *COM*:0000000000000048 htim16
/var/folders/lw/g5htl3957y1bgqbynygtswj40000gn/T//cc3wafMF.s:381    .text.HAL_TIM_Base_MspDeInit:0000000000000000 $t
/var/folders/lw/g5htl3957y1bgqbynygtswj40000gn/T//cc3wafMF.s:388    .text.HAL_TIM_Base_MspDeInit:0000000000000000 HAL_TIM_Base_MspDeInit
/var/folders/lw/g5htl3957y1bgqbynygtswj40000gn/T//cc3wafMF.s:432    .text.HAL_TIM_Base_MspDeInit:0000000000000020 $d

UNDEFINED SYMBOLS
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
memset
HAL_GPIO_Init
HAL_TIM_Base_Init
HAL_TIM_PWM_Init
HAL_TIM_PWM_ConfigChannel
HAL_TIMEx_ConfigBreakDeadTime
Error_Handler
HAL_NVIC_DisableIRQ
